pipeline {
    agent any

    environment {
        PHP_VERSION = '7.4'  // Specify your PHP version
        MYSQL_HOST = 'localhost'
        MYSQL_PORT = '3306'
        MYSQL_DATABASE = 'student_db'
        MYSQL_USER = 'your_db_user'
        MYSQL_PASSWORD = 'your_db_password'
    }

    stages {
        stage('Checkout') {
            steps {
                // Check out the source code from your version control system (e.g., Git)
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                // Install PHP dependencies (if using Composer)
                sh "php${PHP_VERSION} composer.phar install"
            }
        }

        stage('Database Setup') {
            steps {
                // Assuming you have a database migration script
                sh "php${PHP_VERSION} artisan migrate --force"
            }
        }

        stage('Run Tests') {
            steps {
                // Run PHP unit tests
                sh "php${PHP_VERSION} vendor/bin/phpunit"
            }
        }

        stage('Deploy to Server') {
            steps {
                // Assuming you have a deployment script or use SCP, FTP, etc.
                // Example: sh 'scp -r * user@your-server:/path/to/project'
            }
        }
    }

    post {
        always {
            // Clean up or perform any necessary post-build actions
        }

        success {
            // Notify or perform additional actions on successful build
        }

        failure {
            // Notify or perform additional actions on build failure
        }
    }
}
